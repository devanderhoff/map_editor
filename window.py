# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PIL import Image, ImageQt
from PyQt5 import QtCore, QtGui, QtWidgets
from world import World
import numpy as np


class Ui_MainWindow(object):
    def __init__(self):
        self.worldmap = World()
        # self.worldmap.load_world('./tiny_world.ybin')
        # self.worldmap.create_world_image()
        self.worldmap.create_new_world(10, 10, True)
        self.mouse_climate = False
        self.mouse_relief = False


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(927, 716)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setObjectName("graphicsView")
        self.horizontalLayout.addWidget(self.graphicsView)


        self.create_scene()

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.pushButton_2.clicked.connect(self.change_mouse_click_climate)


        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 927, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionLoad_world = QtWidgets.QAction(MainWindow)
        self.actionLoad_world.setObjectName("actionLoad_world")
        self.actionSave_world = QtWidgets.QAction(MainWindow)
        self.actionSave_world.setObjectName("actionSave_world")
        self.menuFile.addAction(self.actionLoad_world)
        self.menuFile.addAction(self.actionSave_world)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_2.setText(_translate("MainWindow", "PushButton"))
        self.pushButton.setText(_translate("MainWindow", "PushButton"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionLoad_world.setText(_translate("MainWindow", "Load world"))
        self.actionSave_world.setText(_translate("MainWindow", "Save world"))



    def create_scene(self):
        self.scene = QtWidgets.QGraphicsScene()

        for n, region in enumerate(self.worldmap.regions):
            pixmap = QtGui.QPixmap.fromImage(region.region_sprite)
            item = QtWidgets.QGraphicsPixmapItem(pixmap)
            self.scene.addItem(item)
            x, y = region.region_xy_to_scene_coords(self.worldmap._REGION_IMAGE_WIDTH, self.worldmap._REGION_IMAGE_HEIGHT)
            pos = QtCore.QPointF(x, y)
            item.setPos(item.mapToScene(pos))

        self.scene.mousePressEvent(QtWidgets.QGraphicsSceneMouseEvent)
        self.graphicsView.setScene(self.scene)
        self.graphicsView.scale(0.3, 0.3)

    def climate_change(self):
        n = np.random.randint(0, len(self.worldmap.regions))
        item = self.graphicsView.items()[n]
        image_array = np.ones((225, 300, 4)) * 155
        image = Image.fromarray(image_array.astype(np.uint8))
        image_pix = ImageQt.ImageQt(image)

        pixmap = QtGui.QPixmap.fromImage(image_pix)
        item.setPixmap(pixmap)

        # climate_id = np.random.randint(0, 8)
        # selected_region = self.worldmap.regions[n]
        # selected_region.climate_id = climate_id
        # self.worldmap.create_region_sprite(selected_region)
        # x, y = selected_region.region_xy_to_scene_coords(self.worldmap.region_image_width, self.worldmap.region_image_height)
        # pos = QtCore.QPointF(x, y)
        # pixmap = QtGui.QPixmap.fromImage(selected_region.region_sprite)
        #
        # pos = self.graphicsView.mapFromScene(pos)
        #
        #
        # test = self.graphicsView.items()[0]
        # test2 = self.scene.items()[0]
        # test2.mapFromScene(0,0)
        print('penis')

    def change_mouse_click_climate(self):
        print('penis')

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
